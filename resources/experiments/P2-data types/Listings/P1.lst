C51 COMPILER V9.56.0.0   P1                                                                06/01/2017 13:27:26 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE P1
OBJECT MODULE PLACED IN .\Objects\P1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE P1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\P1.lst
                    -) TABS(2) OBJECT(.\Objects\P1.obj)

line level    source

   1          //to study data types in embedded c (or c)  using LED interface
   2          #include<reg51.h>   //including this library to use the various registers
   3          int b,f;         //integer data type
   4          float a;        //float data type
   5          double d;      // double data type 
   6          char c;       //character data type
   7          sfr j=0x80;    //special function register data type            
   8          sbit LED1=P3^2;   //single bit data type
   9          sbit LED2=P3^3;
  10          void delay(unsigned int i); //prototype of function with definition later int the program
  11          
  12          void main(void)
  13          {
  14   1          // sbit data type
  15   1          LED1=0; LED2=1;   //LED1 is ON and LED2 is OFF
  16   1          delay(150);     //calling the delay function with 150 msec input
  17   1          LED1=1; LED2=0;   //LED1 is OFF and LED2 is ON
  18   1          delay(150);     //calling the delay function with 150 msec input
  19   1          //integer data type
  20   1          for(b=0;b<=7;b++)    //for loop to give values to variable b from 0-7
  21   1          {
  22   2            P3=61;    //both the LEDs on port 3 are off
  23   2            delay(75);         //calling the delay function with 75 msec input
  24   2            P3=b;         //binary equivalent of decimal nos. stored in port 
  25   2            delay(150);      //calling the delay function with 150 msec input
  26   2          }
  27   1          //character data type-CAPITAL LETTERS
  28   1          for(c='A';c<='Z';c++)     //for loop to give values to variable c from 'A' to 'Z'
  29   1          {
  30   2            P3=61;
  31   2            delay(75);
  32   2            P3=c;             //binary equivalent of ASCII code stored in port 3
  33   2            delay(150);
  34   2          }
  35   1         //character data type-SMALL LETTERS
  36   1         for(c='a';c<='z';c++)          //for loop to give values to variable c from 'a' to 'z'
  37   1         {
  38   2            P3=61;
  39   2            delay(75);
  40   2            P3=c;        //binary equivalent of ASCII code stored in to port 3
  41   2            delay(150);
  42   2         }
  43   1         //float data type
  44   1               for(a=0.6;a<=7.6;a++)      //for loop to give values to variable a from 0.6 to 7.6
  45   1         {
  46   2           P3=61;
  47   2           delay(75);
  48   2           P3=a;        //binary code stored in port 3
  49   2           delay(150);
  50   2         }
  51   1         //double data type
  52   1         for(d=0.2;d<=7.2;d++)    
  53   1         {
  54   2            P3=61;
C51 COMPILER V9.56.0.0   P1                                                                06/01/2017 13:27:26 PAGE 2   

  55   2            delay(75);
  56   2            P3=d;       //binary code stored in port 3  
  57   2            delay(150);
  58   2         }
  59   1         //sfr data type
  60   1         for(f=0;f<=61;f+=61)   
  61   1         {
  62   2            P0=f;
  63   2            P3=j;
  64   2           delay(150);
  65   2         }
  66   1      }
  67          //delay function to cause some delay to observe LED glowing
  68          void delay(unsigned int i)    
  69          {
  70   1        unsigned int k;
  71   1        unsigned int;
  72   1        for(j=0;j<i;j++)    //for loop till the number passed to function
  73   1        for(k=0;k<7500;k++);    //for loop to cause delay of 7500 msec
  74   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    363    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
